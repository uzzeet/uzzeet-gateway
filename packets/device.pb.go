// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocs/device.proto

package packets

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DevicesRequest struct {
	Data                 *any.Any `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DevicesRequest) Reset()         { *m = DevicesRequest{} }
func (m *DevicesRequest) String() string { return proto.CompactTextString(m) }
func (*DevicesRequest) ProtoMessage()    {}
func (*DevicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_399fe31e10d2d36e, []int{0}
}

func (m *DevicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DevicesRequest.Unmarshal(m, b)
}
func (m *DevicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DevicesRequest.Marshal(b, m, deterministic)
}
func (m *DevicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevicesRequest.Merge(m, src)
}
func (m *DevicesRequest) XXX_Size() int {
	return xxx_messageInfo_DevicesRequest.Size(m)
}
func (m *DevicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DevicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DevicesRequest proto.InternalMessageInfo

func (m *DevicesRequest) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateDevicesRequest struct {
	DevicesID            string   `protobuf:"bytes,1,opt,name=DevicesID,proto3" json:"DevicesID,omitempty"`
	Data                 *any.Any `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateDevicesRequest) Reset()         { *m = UpdateDevicesRequest{} }
func (m *UpdateDevicesRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateDevicesRequest) ProtoMessage()    {}
func (*UpdateDevicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_399fe31e10d2d36e, []int{1}
}

func (m *UpdateDevicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDevicesRequest.Unmarshal(m, b)
}
func (m *UpdateDevicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDevicesRequest.Marshal(b, m, deterministic)
}
func (m *UpdateDevicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDevicesRequest.Merge(m, src)
}
func (m *UpdateDevicesRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateDevicesRequest.Size(m)
}
func (m *UpdateDevicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDevicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDevicesRequest proto.InternalMessageInfo

func (m *UpdateDevicesRequest) GetDevicesID() string {
	if m != nil {
		return m.DevicesID
	}
	return ""
}

func (m *UpdateDevicesRequest) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type DevicesRequestByID struct {
	DevicesID            string   `protobuf:"bytes,1,opt,name=DevicesID,proto3" json:"DevicesID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DevicesRequestByID) Reset()         { *m = DevicesRequestByID{} }
func (m *DevicesRequestByID) String() string { return proto.CompactTextString(m) }
func (*DevicesRequestByID) ProtoMessage()    {}
func (*DevicesRequestByID) Descriptor() ([]byte, []int) {
	return fileDescriptor_399fe31e10d2d36e, []int{2}
}

func (m *DevicesRequestByID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DevicesRequestByID.Unmarshal(m, b)
}
func (m *DevicesRequestByID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DevicesRequestByID.Marshal(b, m, deterministic)
}
func (m *DevicesRequestByID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DevicesRequestByID.Merge(m, src)
}
func (m *DevicesRequestByID) XXX_Size() int {
	return xxx_messageInfo_DevicesRequestByID.Size(m)
}
func (m *DevicesRequestByID) XXX_DiscardUnknown() {
	xxx_messageInfo_DevicesRequestByID.DiscardUnknown(m)
}

var xxx_messageInfo_DevicesRequestByID proto.InternalMessageInfo

func (m *DevicesRequestByID) GetDevicesID() string {
	if m != nil {
		return m.DevicesID
	}
	return ""
}

type OutputDevices struct {
	Status               int32    `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Data                 *any.Any `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutputDevices) Reset()         { *m = OutputDevices{} }
func (m *OutputDevices) String() string { return proto.CompactTextString(m) }
func (*OutputDevices) ProtoMessage()    {}
func (*OutputDevices) Descriptor() ([]byte, []int) {
	return fileDescriptor_399fe31e10d2d36e, []int{3}
}

func (m *OutputDevices) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutputDevices.Unmarshal(m, b)
}
func (m *OutputDevices) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutputDevices.Marshal(b, m, deterministic)
}
func (m *OutputDevices) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutputDevices.Merge(m, src)
}
func (m *OutputDevices) XXX_Size() int {
	return xxx_messageInfo_OutputDevices.Size(m)
}
func (m *OutputDevices) XXX_DiscardUnknown() {
	xxx_messageInfo_OutputDevices.DiscardUnknown(m)
}

var xxx_messageInfo_OutputDevices proto.InternalMessageInfo

func (m *OutputDevices) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *OutputDevices) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type GpstypeRequest struct {
	Data                 *any.Any `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GpstypeRequest) Reset()         { *m = GpstypeRequest{} }
func (m *GpstypeRequest) String() string { return proto.CompactTextString(m) }
func (*GpstypeRequest) ProtoMessage()    {}
func (*GpstypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_399fe31e10d2d36e, []int{4}
}

func (m *GpstypeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GpstypeRequest.Unmarshal(m, b)
}
func (m *GpstypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GpstypeRequest.Marshal(b, m, deterministic)
}
func (m *GpstypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GpstypeRequest.Merge(m, src)
}
func (m *GpstypeRequest) XXX_Size() int {
	return xxx_messageInfo_GpstypeRequest.Size(m)
}
func (m *GpstypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GpstypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GpstypeRequest proto.InternalMessageInfo

func (m *GpstypeRequest) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateGpstypeRequest struct {
	GpsID                int64    `protobuf:"varint,1,opt,name=GpsID,proto3" json:"GpsID,omitempty"`
	Data                 *any.Any `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateGpstypeRequest) Reset()         { *m = UpdateGpstypeRequest{} }
func (m *UpdateGpstypeRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateGpstypeRequest) ProtoMessage()    {}
func (*UpdateGpstypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_399fe31e10d2d36e, []int{5}
}

func (m *UpdateGpstypeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateGpstypeRequest.Unmarshal(m, b)
}
func (m *UpdateGpstypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateGpstypeRequest.Marshal(b, m, deterministic)
}
func (m *UpdateGpstypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateGpstypeRequest.Merge(m, src)
}
func (m *UpdateGpstypeRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateGpstypeRequest.Size(m)
}
func (m *UpdateGpstypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateGpstypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateGpstypeRequest proto.InternalMessageInfo

func (m *UpdateGpstypeRequest) GetGpsID() int64 {
	if m != nil {
		return m.GpsID
	}
	return 0
}

func (m *UpdateGpstypeRequest) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type GpstypeRequestByID struct {
	GpsID                int64    `protobuf:"varint,1,opt,name=GpsID,proto3" json:"GpsID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GpstypeRequestByID) Reset()         { *m = GpstypeRequestByID{} }
func (m *GpstypeRequestByID) String() string { return proto.CompactTextString(m) }
func (*GpstypeRequestByID) ProtoMessage()    {}
func (*GpstypeRequestByID) Descriptor() ([]byte, []int) {
	return fileDescriptor_399fe31e10d2d36e, []int{6}
}

func (m *GpstypeRequestByID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GpstypeRequestByID.Unmarshal(m, b)
}
func (m *GpstypeRequestByID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GpstypeRequestByID.Marshal(b, m, deterministic)
}
func (m *GpstypeRequestByID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GpstypeRequestByID.Merge(m, src)
}
func (m *GpstypeRequestByID) XXX_Size() int {
	return xxx_messageInfo_GpstypeRequestByID.Size(m)
}
func (m *GpstypeRequestByID) XXX_DiscardUnknown() {
	xxx_messageInfo_GpstypeRequestByID.DiscardUnknown(m)
}

var xxx_messageInfo_GpstypeRequestByID proto.InternalMessageInfo

func (m *GpstypeRequestByID) GetGpsID() int64 {
	if m != nil {
		return m.GpsID
	}
	return 0
}

type OutputGpstype struct {
	Status               int32    `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Data                 *any.Any `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutputGpstype) Reset()         { *m = OutputGpstype{} }
func (m *OutputGpstype) String() string { return proto.CompactTextString(m) }
func (*OutputGpstype) ProtoMessage()    {}
func (*OutputGpstype) Descriptor() ([]byte, []int) {
	return fileDescriptor_399fe31e10d2d36e, []int{7}
}

func (m *OutputGpstype) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutputGpstype.Unmarshal(m, b)
}
func (m *OutputGpstype) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutputGpstype.Marshal(b, m, deterministic)
}
func (m *OutputGpstype) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutputGpstype.Merge(m, src)
}
func (m *OutputGpstype) XXX_Size() int {
	return xxx_messageInfo_OutputGpstype.Size(m)
}
func (m *OutputGpstype) XXX_DiscardUnknown() {
	xxx_messageInfo_OutputGpstype.DiscardUnknown(m)
}

var xxx_messageInfo_OutputGpstype proto.InternalMessageInfo

func (m *OutputGpstype) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *OutputGpstype) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type HistoryRequest struct {
	Data                 *any.Any `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryRequest) Reset()         { *m = HistoryRequest{} }
func (m *HistoryRequest) String() string { return proto.CompactTextString(m) }
func (*HistoryRequest) ProtoMessage()    {}
func (*HistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_399fe31e10d2d36e, []int{8}
}

func (m *HistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryRequest.Unmarshal(m, b)
}
func (m *HistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryRequest.Marshal(b, m, deterministic)
}
func (m *HistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryRequest.Merge(m, src)
}
func (m *HistoryRequest) XXX_Size() int {
	return xxx_messageInfo_HistoryRequest.Size(m)
}
func (m *HistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryRequest proto.InternalMessageInfo

func (m *HistoryRequest) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateHistoryRequest struct {
	HistoryID            string   `protobuf:"bytes,1,opt,name=HistoryID,proto3" json:"HistoryID,omitempty"`
	Data                 *any.Any `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateHistoryRequest) Reset()         { *m = UpdateHistoryRequest{} }
func (m *UpdateHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateHistoryRequest) ProtoMessage()    {}
func (*UpdateHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_399fe31e10d2d36e, []int{9}
}

func (m *UpdateHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateHistoryRequest.Unmarshal(m, b)
}
func (m *UpdateHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateHistoryRequest.Marshal(b, m, deterministic)
}
func (m *UpdateHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateHistoryRequest.Merge(m, src)
}
func (m *UpdateHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateHistoryRequest.Size(m)
}
func (m *UpdateHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateHistoryRequest proto.InternalMessageInfo

func (m *UpdateHistoryRequest) GetHistoryID() string {
	if m != nil {
		return m.HistoryID
	}
	return ""
}

func (m *UpdateHistoryRequest) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type HistoryRequestByID struct {
	HistoryID            string   `protobuf:"bytes,1,opt,name=HistoryID,proto3" json:"HistoryID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryRequestByID) Reset()         { *m = HistoryRequestByID{} }
func (m *HistoryRequestByID) String() string { return proto.CompactTextString(m) }
func (*HistoryRequestByID) ProtoMessage()    {}
func (*HistoryRequestByID) Descriptor() ([]byte, []int) {
	return fileDescriptor_399fe31e10d2d36e, []int{10}
}

func (m *HistoryRequestByID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryRequestByID.Unmarshal(m, b)
}
func (m *HistoryRequestByID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryRequestByID.Marshal(b, m, deterministic)
}
func (m *HistoryRequestByID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryRequestByID.Merge(m, src)
}
func (m *HistoryRequestByID) XXX_Size() int {
	return xxx_messageInfo_HistoryRequestByID.Size(m)
}
func (m *HistoryRequestByID) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryRequestByID.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryRequestByID proto.InternalMessageInfo

func (m *HistoryRequestByID) GetHistoryID() string {
	if m != nil {
		return m.HistoryID
	}
	return ""
}

type OutputHistory struct {
	Status               int32    `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Data                 *any.Any `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutputHistory) Reset()         { *m = OutputHistory{} }
func (m *OutputHistory) String() string { return proto.CompactTextString(m) }
func (*OutputHistory) ProtoMessage()    {}
func (*OutputHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_399fe31e10d2d36e, []int{11}
}

func (m *OutputHistory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutputHistory.Unmarshal(m, b)
}
func (m *OutputHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutputHistory.Marshal(b, m, deterministic)
}
func (m *OutputHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutputHistory.Merge(m, src)
}
func (m *OutputHistory) XXX_Size() int {
	return xxx_messageInfo_OutputHistory.Size(m)
}
func (m *OutputHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_OutputHistory.DiscardUnknown(m)
}

var xxx_messageInfo_OutputHistory proto.InternalMessageInfo

func (m *OutputHistory) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *OutputHistory) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*DevicesRequest)(nil), "packets.DevicesRequest")
	proto.RegisterType((*UpdateDevicesRequest)(nil), "packets.UpdateDevicesRequest")
	proto.RegisterType((*DevicesRequestByID)(nil), "packets.DevicesRequestByID")
	proto.RegisterType((*OutputDevices)(nil), "packets.OutputDevices")
	proto.RegisterType((*GpstypeRequest)(nil), "packets.GpstypeRequest")
	proto.RegisterType((*UpdateGpstypeRequest)(nil), "packets.UpdateGpstypeRequest")
	proto.RegisterType((*GpstypeRequestByID)(nil), "packets.GpstypeRequestByID")
	proto.RegisterType((*OutputGpstype)(nil), "packets.OutputGpstype")
	proto.RegisterType((*HistoryRequest)(nil), "packets.HistoryRequest")
	proto.RegisterType((*UpdateHistoryRequest)(nil), "packets.UpdateHistoryRequest")
	proto.RegisterType((*HistoryRequestByID)(nil), "packets.HistoryRequestByID")
	proto.RegisterType((*OutputHistory)(nil), "packets.OutputHistory")
}

func init() { proto.RegisterFile("protocs/device.proto", fileDescriptor_399fe31e10d2d36e) }

var fileDescriptor_399fe31e10d2d36e = []byte{
	// 472 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x41, 0x8f, 0x93, 0x40,
	0x14, 0xc7, 0x77, 0xd5, 0xdd, 0x95, 0xb7, 0xdb, 0x26, 0x8e, 0x64, 0xd5, 0x75, 0x4d, 0x0c, 0xa7,
	0xc6, 0x03, 0x4d, 0xea, 0xad, 0x9e, 0x0a, 0x24, 0x14, 0xd3, 0xc4, 0x88, 0xd1, 0x83, 0x07, 0x13,
	0xda, 0x8e, 0x0d, 0xb1, 0x16, 0xec, 0x0c, 0x26, 0x7c, 0x3c, 0xbf, 0x99, 0x71, 0x98, 0x19, 0x98,
	0xa1, 0x45, 0x68, 0x7b, 0x7c, 0x6f, 0x66, 0x7e, 0xf9, 0xf3, 0xeb, 0x7b, 0x05, 0x33, 0xdd, 0x26,
	0x34, 0x59, 0x90, 0xe1, 0x12, 0xff, 0x8e, 0x17, 0xd8, 0x66, 0x25, 0xba, 0x4a, 0xa3, 0xc5, 0x0f,
	0x4c, 0xc9, 0xdd, 0x8b, 0x55, 0x92, 0xac, 0xd6, 0x78, 0xc8, 0xda, 0xf3, 0xec, 0xfb, 0x30, 0xda,
	0xe4, 0xc5, 0x1d, 0x6b, 0x0c, 0x7d, 0x8f, 0xbd, 0x21, 0x21, 0xfe, 0x95, 0x61, 0x42, 0xd1, 0x00,
	0x1e, 0x79, 0x11, 0x8d, 0x9e, 0x9f, 0xbf, 0x3e, 0x1f, 0x5c, 0x8f, 0x4c, 0xbb, 0x78, 0x6b, 0x8b,
	0xb7, 0xf6, 0x64, 0x93, 0x87, 0xec, 0x86, 0xf5, 0x0d, 0xcc, 0xcf, 0xe9, 0x32, 0xa2, 0x58, 0x23,
	0xdc, 0x83, 0xc1, 0x3b, 0x81, 0xc7, 0x30, 0x46, 0x58, 0x36, 0x24, 0xff, 0xc1, 0x7f, 0xf9, 0x23,
	0x40, 0x2a, 0xd9, 0xc9, 0x03, 0xaf, 0x99, 0x6e, 0x7d, 0x84, 0xde, 0x87, 0x8c, 0xa6, 0x19, 0xe5,
	0x2d, 0x74, 0x0b, 0x97, 0x9f, 0x68, 0x44, 0x33, 0xc2, 0xee, 0x5e, 0x84, 0xbc, 0xea, 0x10, 0x63,
	0x0c, 0x7d, 0x3f, 0x25, 0x34, 0x4f, 0x71, 0x77, 0x45, 0x5f, 0x84, 0x22, 0x8d, 0x60, 0xc2, 0x85,
	0x9f, 0x8a, 0x0f, 0x78, 0x18, 0x16, 0x45, 0x87, 0x4c, 0x6f, 0x00, 0xa9, 0x44, 0xa6, 0x66, 0x27,
	0xb5, 0x54, 0xc2, 0x5f, 0x9c, 0x46, 0xc9, 0x34, 0x26, 0x34, 0xd9, 0xe6, 0x47, 0x4c, 0x8d, 0x46,
	0xb8, 0x07, 0x83, 0x77, 0xca, 0xdf, 0x55, 0x36, 0xba, 0x4d, 0x8d, 0x4a, 0x16, 0x53, 0xb3, 0x9f,
	0x5e, 0x2a, 0xe2, 0xad, 0xe3, 0x15, 0x8d, 0xfe, 0x3c, 0x86, 0x2b, 0x31, 0x83, 0x13, 0xb8, 0x71,
	0xb7, 0x58, 0x2e, 0x0a, 0x7a, 0x66, 0xf3, 0xcd, 0xb4, 0xd5, 0xf9, 0xbe, 0xbb, 0x95, 0x07, 0xca,
	0x10, 0x5b, 0x67, 0xc8, 0x87, 0x9b, 0xea, 0xae, 0xa1, 0x57, 0xf2, 0xe6, 0xae, 0x15, 0x6c, 0x04,
	0xf5, 0x7d, 0x2c, 0x6a, 0x27, 0x0f, 0x96, 0xe8, 0xe5, 0x9e, 0x34, 0xff, 0xbc, 0x35, 0x80, 0xdc,
	0x2a, 0x68, 0x16, 0x13, 0x7a, 0xc8, 0x67, 0xcd, 0xe0, 0xa9, 0x87, 0xd7, 0x58, 0xe6, 0x77, 0xf2,
	0xe0, 0x27, 0x8e, 0x0f, 0x8d, 0xe4, 0x40, 0xaf, 0xf0, 0x2c, 0x26, 0xbd, 0x4c, 0xa4, 0x6e, 0x4b,
	0x8d, 0xc1, 0x8f, 0xad, 0x33, 0x34, 0x85, 0x9e, 0xb2, 0xb1, 0x35, 0xd3, 0xad, 0x49, 0x85, 0x69,
	0x5e, 0x6b, 0xa6, 0xeb, 0xcb, 0xdb, 0x00, 0x72, 0xab, 0x20, 0xcd, 0x74, 0xeb, 0x34, 0xef, 0xe1,
	0x49, 0x61, 0xfa, 0x04, 0x81, 0xa4, 0x67, 0xb1, 0x2e, 0x65, 0x1e, 0x75, 0xf5, 0x6a, 0x0c, 0x7e,
	0x5c, 0xf5, 0x2c, 0x18, 0xba, 0xe7, 0xd6, 0xa4, 0xc2, 0x33, 0xaf, 0xb5, 0xcf, 0xaa, 0xff, 0x13,
	0x34, 0x80, 0xdc, 0x2a, 0x48, 0xf3, 0xdc, 0x3a, 0x8d, 0xf4, 0x7c, 0x7c, 0x20, 0xe7, 0xfa, 0xab,
	0x61, 0xbf, 0xe3, 0x87, 0xf3, 0x4b, 0xf6, 0x27, 0xf3, 0xf6, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x3f, 0xe1, 0x52, 0x21, 0xec, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DevicesClient is the client API for Devices service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DevicesClient interface {
	CreateDevice(ctx context.Context, in *DevicesRequest, opts ...grpc.CallOption) (*OutputDevices, error)
	UpdateDevice(ctx context.Context, in *UpdateDevicesRequest, opts ...grpc.CallOption) (*OutputDevices, error)
	GetDevicesById(ctx context.Context, in *DevicesRequestByID, opts ...grpc.CallOption) (*OutputDevices, error)
	GetDevicesList(ctx context.Context, in *DevicesRequest, opts ...grpc.CallOption) (*OutputDevices, error)
	DeleteDevicesByImei(ctx context.Context, in *DevicesRequestByID, opts ...grpc.CallOption) (*OutputDevices, error)
	CreateGpstype(ctx context.Context, in *GpstypeRequest, opts ...grpc.CallOption) (*OutputGpstype, error)
	UpdateGpstype(ctx context.Context, in *UpdateGpstypeRequest, opts ...grpc.CallOption) (*OutputGpstype, error)
	GetGpstypeById(ctx context.Context, in *GpstypeRequestByID, opts ...grpc.CallOption) (*OutputGpstype, error)
	GetGpstypeList(ctx context.Context, in *GpstypeRequest, opts ...grpc.CallOption) (*OutputGpstype, error)
	DeleteGpstypeById(ctx context.Context, in *GpstypeRequestByID, opts ...grpc.CallOption) (*OutputGpstype, error)
	CreateHistory(ctx context.Context, in *HistoryRequest, opts ...grpc.CallOption) (*OutputHistory, error)
	UpdateHistory(ctx context.Context, in *UpdateHistoryRequest, opts ...grpc.CallOption) (*OutputHistory, error)
	GetHistoryById(ctx context.Context, in *HistoryRequestByID, opts ...grpc.CallOption) (*OutputHistory, error)
	GetHistoryList(ctx context.Context, in *HistoryRequest, opts ...grpc.CallOption) (*OutputHistory, error)
	DeleteHistoryById(ctx context.Context, in *HistoryRequestByID, opts ...grpc.CallOption) (*OutputHistory, error)
}

type devicesClient struct {
	cc *grpc.ClientConn
}

func NewDevicesClient(cc *grpc.ClientConn) DevicesClient {
	return &devicesClient{cc}
}

func (c *devicesClient) CreateDevice(ctx context.Context, in *DevicesRequest, opts ...grpc.CallOption) (*OutputDevices, error) {
	out := new(OutputDevices)
	err := c.cc.Invoke(ctx, "/packets.Devices/CreateDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devicesClient) UpdateDevice(ctx context.Context, in *UpdateDevicesRequest, opts ...grpc.CallOption) (*OutputDevices, error) {
	out := new(OutputDevices)
	err := c.cc.Invoke(ctx, "/packets.Devices/UpdateDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devicesClient) GetDevicesById(ctx context.Context, in *DevicesRequestByID, opts ...grpc.CallOption) (*OutputDevices, error) {
	out := new(OutputDevices)
	err := c.cc.Invoke(ctx, "/packets.Devices/GetDevicesById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devicesClient) GetDevicesList(ctx context.Context, in *DevicesRequest, opts ...grpc.CallOption) (*OutputDevices, error) {
	out := new(OutputDevices)
	err := c.cc.Invoke(ctx, "/packets.Devices/GetDevicesList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devicesClient) DeleteDevicesByImei(ctx context.Context, in *DevicesRequestByID, opts ...grpc.CallOption) (*OutputDevices, error) {
	out := new(OutputDevices)
	err := c.cc.Invoke(ctx, "/packets.Devices/DeleteDevicesByImei", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devicesClient) CreateGpstype(ctx context.Context, in *GpstypeRequest, opts ...grpc.CallOption) (*OutputGpstype, error) {
	out := new(OutputGpstype)
	err := c.cc.Invoke(ctx, "/packets.Devices/CreateGpstype", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devicesClient) UpdateGpstype(ctx context.Context, in *UpdateGpstypeRequest, opts ...grpc.CallOption) (*OutputGpstype, error) {
	out := new(OutputGpstype)
	err := c.cc.Invoke(ctx, "/packets.Devices/UpdateGpstype", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devicesClient) GetGpstypeById(ctx context.Context, in *GpstypeRequestByID, opts ...grpc.CallOption) (*OutputGpstype, error) {
	out := new(OutputGpstype)
	err := c.cc.Invoke(ctx, "/packets.Devices/GetGpstypeById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devicesClient) GetGpstypeList(ctx context.Context, in *GpstypeRequest, opts ...grpc.CallOption) (*OutputGpstype, error) {
	out := new(OutputGpstype)
	err := c.cc.Invoke(ctx, "/packets.Devices/GetGpstypeList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devicesClient) DeleteGpstypeById(ctx context.Context, in *GpstypeRequestByID, opts ...grpc.CallOption) (*OutputGpstype, error) {
	out := new(OutputGpstype)
	err := c.cc.Invoke(ctx, "/packets.Devices/DeleteGpstypeById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devicesClient) CreateHistory(ctx context.Context, in *HistoryRequest, opts ...grpc.CallOption) (*OutputHistory, error) {
	out := new(OutputHistory)
	err := c.cc.Invoke(ctx, "/packets.Devices/CreateHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devicesClient) UpdateHistory(ctx context.Context, in *UpdateHistoryRequest, opts ...grpc.CallOption) (*OutputHistory, error) {
	out := new(OutputHistory)
	err := c.cc.Invoke(ctx, "/packets.Devices/UpdateHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devicesClient) GetHistoryById(ctx context.Context, in *HistoryRequestByID, opts ...grpc.CallOption) (*OutputHistory, error) {
	out := new(OutputHistory)
	err := c.cc.Invoke(ctx, "/packets.Devices/GetHistoryById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devicesClient) GetHistoryList(ctx context.Context, in *HistoryRequest, opts ...grpc.CallOption) (*OutputHistory, error) {
	out := new(OutputHistory)
	err := c.cc.Invoke(ctx, "/packets.Devices/GetHistoryList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devicesClient) DeleteHistoryById(ctx context.Context, in *HistoryRequestByID, opts ...grpc.CallOption) (*OutputHistory, error) {
	out := new(OutputHistory)
	err := c.cc.Invoke(ctx, "/packets.Devices/DeleteHistoryById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DevicesServer is the server API for Devices service.
type DevicesServer interface {
	CreateDevice(context.Context, *DevicesRequest) (*OutputDevices, error)
	UpdateDevice(context.Context, *UpdateDevicesRequest) (*OutputDevices, error)
	GetDevicesById(context.Context, *DevicesRequestByID) (*OutputDevices, error)
	GetDevicesList(context.Context, *DevicesRequest) (*OutputDevices, error)
	DeleteDevicesByImei(context.Context, *DevicesRequestByID) (*OutputDevices, error)
	CreateGpstype(context.Context, *GpstypeRequest) (*OutputGpstype, error)
	UpdateGpstype(context.Context, *UpdateGpstypeRequest) (*OutputGpstype, error)
	GetGpstypeById(context.Context, *GpstypeRequestByID) (*OutputGpstype, error)
	GetGpstypeList(context.Context, *GpstypeRequest) (*OutputGpstype, error)
	DeleteGpstypeById(context.Context, *GpstypeRequestByID) (*OutputGpstype, error)
	CreateHistory(context.Context, *HistoryRequest) (*OutputHistory, error)
	UpdateHistory(context.Context, *UpdateHistoryRequest) (*OutputHistory, error)
	GetHistoryById(context.Context, *HistoryRequestByID) (*OutputHistory, error)
	GetHistoryList(context.Context, *HistoryRequest) (*OutputHistory, error)
	DeleteHistoryById(context.Context, *HistoryRequestByID) (*OutputHistory, error)
}

// UnimplementedDevicesServer can be embedded to have forward compatible implementations.
type UnimplementedDevicesServer struct {
}

func (*UnimplementedDevicesServer) CreateDevice(ctx context.Context, req *DevicesRequest) (*OutputDevices, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDevice not implemented")
}
func (*UnimplementedDevicesServer) UpdateDevice(ctx context.Context, req *UpdateDevicesRequest) (*OutputDevices, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDevice not implemented")
}
func (*UnimplementedDevicesServer) GetDevicesById(ctx context.Context, req *DevicesRequestByID) (*OutputDevices, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDevicesById not implemented")
}
func (*UnimplementedDevicesServer) GetDevicesList(ctx context.Context, req *DevicesRequest) (*OutputDevices, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDevicesList not implemented")
}
func (*UnimplementedDevicesServer) DeleteDevicesByImei(ctx context.Context, req *DevicesRequestByID) (*OutputDevices, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDevicesByImei not implemented")
}
func (*UnimplementedDevicesServer) CreateGpstype(ctx context.Context, req *GpstypeRequest) (*OutputGpstype, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGpstype not implemented")
}
func (*UnimplementedDevicesServer) UpdateGpstype(ctx context.Context, req *UpdateGpstypeRequest) (*OutputGpstype, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGpstype not implemented")
}
func (*UnimplementedDevicesServer) GetGpstypeById(ctx context.Context, req *GpstypeRequestByID) (*OutputGpstype, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGpstypeById not implemented")
}
func (*UnimplementedDevicesServer) GetGpstypeList(ctx context.Context, req *GpstypeRequest) (*OutputGpstype, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGpstypeList not implemented")
}
func (*UnimplementedDevicesServer) DeleteGpstypeById(ctx context.Context, req *GpstypeRequestByID) (*OutputGpstype, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGpstypeById not implemented")
}
func (*UnimplementedDevicesServer) CreateHistory(ctx context.Context, req *HistoryRequest) (*OutputHistory, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateHistory not implemented")
}
func (*UnimplementedDevicesServer) UpdateHistory(ctx context.Context, req *UpdateHistoryRequest) (*OutputHistory, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateHistory not implemented")
}
func (*UnimplementedDevicesServer) GetHistoryById(ctx context.Context, req *HistoryRequestByID) (*OutputHistory, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHistoryById not implemented")
}
func (*UnimplementedDevicesServer) GetHistoryList(ctx context.Context, req *HistoryRequest) (*OutputHistory, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHistoryList not implemented")
}
func (*UnimplementedDevicesServer) DeleteHistoryById(ctx context.Context, req *HistoryRequestByID) (*OutputHistory, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteHistoryById not implemented")
}

func RegisterDevicesServer(s *grpc.Server, srv DevicesServer) {
	s.RegisterService(&_Devices_serviceDesc, srv)
}

func _Devices_CreateDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DevicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevicesServer).CreateDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.Devices/CreateDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevicesServer).CreateDevice(ctx, req.(*DevicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Devices_UpdateDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDevicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevicesServer).UpdateDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.Devices/UpdateDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevicesServer).UpdateDevice(ctx, req.(*UpdateDevicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Devices_GetDevicesById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DevicesRequestByID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevicesServer).GetDevicesById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.Devices/GetDevicesById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevicesServer).GetDevicesById(ctx, req.(*DevicesRequestByID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Devices_GetDevicesList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DevicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevicesServer).GetDevicesList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.Devices/GetDevicesList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevicesServer).GetDevicesList(ctx, req.(*DevicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Devices_DeleteDevicesByImei_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DevicesRequestByID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevicesServer).DeleteDevicesByImei(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.Devices/DeleteDevicesByImei",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevicesServer).DeleteDevicesByImei(ctx, req.(*DevicesRequestByID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Devices_CreateGpstype_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GpstypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevicesServer).CreateGpstype(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.Devices/CreateGpstype",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevicesServer).CreateGpstype(ctx, req.(*GpstypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Devices_UpdateGpstype_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGpstypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevicesServer).UpdateGpstype(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.Devices/UpdateGpstype",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevicesServer).UpdateGpstype(ctx, req.(*UpdateGpstypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Devices_GetGpstypeById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GpstypeRequestByID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevicesServer).GetGpstypeById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.Devices/GetGpstypeById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevicesServer).GetGpstypeById(ctx, req.(*GpstypeRequestByID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Devices_GetGpstypeList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GpstypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevicesServer).GetGpstypeList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.Devices/GetGpstypeList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevicesServer).GetGpstypeList(ctx, req.(*GpstypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Devices_DeleteGpstypeById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GpstypeRequestByID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevicesServer).DeleteGpstypeById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.Devices/DeleteGpstypeById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevicesServer).DeleteGpstypeById(ctx, req.(*GpstypeRequestByID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Devices_CreateHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevicesServer).CreateHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.Devices/CreateHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevicesServer).CreateHistory(ctx, req.(*HistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Devices_UpdateHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevicesServer).UpdateHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.Devices/UpdateHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevicesServer).UpdateHistory(ctx, req.(*UpdateHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Devices_GetHistoryById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HistoryRequestByID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevicesServer).GetHistoryById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.Devices/GetHistoryById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevicesServer).GetHistoryById(ctx, req.(*HistoryRequestByID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Devices_GetHistoryList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevicesServer).GetHistoryList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.Devices/GetHistoryList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevicesServer).GetHistoryList(ctx, req.(*HistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Devices_DeleteHistoryById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HistoryRequestByID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevicesServer).DeleteHistoryById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.Devices/DeleteHistoryById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevicesServer).DeleteHistoryById(ctx, req.(*HistoryRequestByID))
	}
	return interceptor(ctx, in, info, handler)
}

var _Devices_serviceDesc = grpc.ServiceDesc{
	ServiceName: "packets.Devices",
	HandlerType: (*DevicesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDevice",
			Handler:    _Devices_CreateDevice_Handler,
		},
		{
			MethodName: "UpdateDevice",
			Handler:    _Devices_UpdateDevice_Handler,
		},
		{
			MethodName: "GetDevicesById",
			Handler:    _Devices_GetDevicesById_Handler,
		},
		{
			MethodName: "GetDevicesList",
			Handler:    _Devices_GetDevicesList_Handler,
		},
		{
			MethodName: "DeleteDevicesByImei",
			Handler:    _Devices_DeleteDevicesByImei_Handler,
		},
		{
			MethodName: "CreateGpstype",
			Handler:    _Devices_CreateGpstype_Handler,
		},
		{
			MethodName: "UpdateGpstype",
			Handler:    _Devices_UpdateGpstype_Handler,
		},
		{
			MethodName: "GetGpstypeById",
			Handler:    _Devices_GetGpstypeById_Handler,
		},
		{
			MethodName: "GetGpstypeList",
			Handler:    _Devices_GetGpstypeList_Handler,
		},
		{
			MethodName: "DeleteGpstypeById",
			Handler:    _Devices_DeleteGpstypeById_Handler,
		},
		{
			MethodName: "CreateHistory",
			Handler:    _Devices_CreateHistory_Handler,
		},
		{
			MethodName: "UpdateHistory",
			Handler:    _Devices_UpdateHistory_Handler,
		},
		{
			MethodName: "GetHistoryById",
			Handler:    _Devices_GetHistoryById_Handler,
		},
		{
			MethodName: "GetHistoryList",
			Handler:    _Devices_GetHistoryList_Handler,
		},
		{
			MethodName: "DeleteHistoryById",
			Handler:    _Devices_DeleteHistoryById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protocs/device.proto",
}
